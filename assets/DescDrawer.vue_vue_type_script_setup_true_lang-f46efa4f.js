var e=Object.defineProperty,t=Object.defineProperties,l=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,r=(t,l,a)=>l in t?e(t,l,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[l]=a,i=(e,t,l)=>new Promise(((a,s)=>{var o=e=>{try{i(l.next(e))}catch(t){s(t)}},r=e=>{try{i(l.throw(e))}catch(t){s(t)}},i=e=>e.done?a(e.value):Promise.resolve(e.value).then(o,r);i((l=l.apply(e,t)).next())}));import{u as d,b as n}from"./index-35313998.js";import{u as p,D as c}from"./index-6d58fe5a.js";import{s as u}from"./index-2e5c6a76.js";import{cR as m,a as f,s as b,bs as h,o as g,i as y,y as w,m as x,h as I,aG as P,f6 as v}from"./index-d32d699d.js";const _=[{title:"操作模块",dataIndex:"logModule",width:100},{title:"操作内容",dataIndex:"logTitle",width:150},{title:"日志状态",dataIndex:"logStatus",width:120},{title:"用户平台",dataIndex:"userPlatform",width:120},{title:"请求地址",dataIndex:"requsetUri",width:200},{title:"请求方式",dataIndex:"requsetType",width:120},{title:"请求方法",dataIndex:"requsetMethod",width:200},{title:"请求参数",dataIndex:"requsetParams",width:200},{title:"请求耗时",dataIndex:"requsetTime",width:120},{title:"操作人员",dataIndex:"operName",width:120},{title:"IP地址",dataIndex:"ipAddress",width:120},{title:"操作地点",dataIndex:"operLocation",width:150},{title:"浏览器类型",dataIndex:"browser",width:150},{title:"操作系统",dataIndex:"os",width:300},{title:"备注",dataIndex:"remarks",width:120},{title:"操作时间",dataIndex:"createTime",width:160}],S=[{field:"logModule",label:"操作模块",component:"Input",componentProps:{placeholder:"请输入操作模块"}},{field:"logTitle",label:"操作内容",component:"Input",componentProps:{placeholder:"请输入操作内容"}},{field:"logStatus",label:"日志状态",component:"ApiSelect",componentProps:{placeholder:"请选择日志状态",api:u,params:{dictCode:"sys_log_status"}}},{field:"userPlatform",label:"用户平台",component:"ApiSelect",componentProps:{placeholder:"请选择用户平台",api:u,params:{dictCode:"sys_user_platform"}}},{field:"operName",label:"操作人员",component:"Input",componentProps:{placeholder:"请输入操作人员"}}],j=[{field:"logModule",label:"操作模块",labelMinWidth:80},{field:"logTitle",label:"操作内容",labelMinWidth:80},{field:"logStatusDesc",label:"日志状态"},{field:"userPlatformDesc",label:"用户平台"},{field:"requsetUri",label:"请求地址"},{field:"requsetType",label:"请求方式"},{field:"requsetMethod",label:"请求方法"},{field:"requsetParams",label:"请求参数"},{field:"requsetTime",label:"请求耗时"},{field:"operName",label:"操作人员"},{field:"ipAddress",label:"IP地址"},{field:"operLocation",label:"操作地点"},{field:"browser",label:"浏览器类型"},{field:"os",label:"操作系统"},{field:"remarks",label:"备注"},{field:"createTime",label:"操作时间"}];function q(e){return m.get({url:"/system/sysLog/selectSysLogWithPage",params:e})}const O=f({__name:"DescDrawer",setup(e){const f=b(),_=b([]),S=b([]);h((()=>i(this,null,(function*(){_.value=yield u({dictCode:"sys_log_status"}),S.value=yield u({dictCode:"sys_user_platform"})}))));const[q]=d((e=>i(this,null,(function*(){const i=yield(d={id:e.record.id},m.get({url:"/system/sysLog/getSysLog",params:d}));var d,n,p;f.value=(n=((e,t)=>{for(var l in t||(t={}))s.call(t,l)&&r(e,l,t[l]);if(a)for(var l of a(t))o.call(t,l)&&r(e,l,t[l]);return e})({},i),p={logStatusDesc:v(_.value,i.logStatus),userPlatformDesc:v(S.value,i.userPlatform)},t(n,l(p)))})))),[O]=p({schema:j,column:2,labelStyle:{width:"120px"}});return(e,t)=>(g(),y(I(n),P(e.$attrs,{onRegister:I(q),title:"操作日志详情",width:"60%"}),{default:w((()=>[x(I(c),{onRegister:I(O),data:f.value},null,8,["onRegister","data"])])),_:1},16,["onRegister"]))}});export{O as _,_ as c,q as f,S as s};
